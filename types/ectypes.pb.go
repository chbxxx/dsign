// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: ectypes.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyGenPhase1Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom         string   `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`            //发送该消息的节点下标
	PubKeyCommit      []byte   `protobuf:"bytes,2,opt,name=pub_key_commit,json=pubKeyCommit,proto3" json:"pub_key_commit,omitempty"` //公钥commit
	CofCommit         [][]byte `protobuf:"bytes,3,rep,name=cof_commit,json=cofCommit,proto3" json:"cof_commit,omitempty"`            //shamir系数commit
	NTilde            []byte   `protobuf:"bytes,4,opt,name=NTilde,proto3" json:"NTilde,omitempty"`
	H1                []byte   `protobuf:"bytes,5,opt,name=h1,proto3" json:"h1,omitempty"`
	H2                []byte   `protobuf:"bytes,6,opt,name=h2,proto3" json:"h2,omitempty"`
	Proof             *PQProof `protobuf:"bytes,7,opt,name=proof,proto3" json:"proof,omitempty"`
	ShamirSharePubKey []byte   `protobuf:"bytes,8,opt,name=shamir_share_pub_key,json=shamirSharePubKey,proto3" json:"shamir_share_pub_key,omitempty"`
}

func (x *KeyGenPhase1Msg) Reset() {
	*x = KeyGenPhase1Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyGenPhase1Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyGenPhase1Msg) ProtoMessage() {}

func (x *KeyGenPhase1Msg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyGenPhase1Msg.ProtoReflect.Descriptor instead.
func (*KeyGenPhase1Msg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{0}
}

func (x *KeyGenPhase1Msg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeyGenPhase1Msg) GetPubKeyCommit() []byte {
	if x != nil {
		return x.PubKeyCommit
	}
	return nil
}

func (x *KeyGenPhase1Msg) GetCofCommit() [][]byte {
	if x != nil {
		return x.CofCommit
	}
	return nil
}

func (x *KeyGenPhase1Msg) GetNTilde() []byte {
	if x != nil {
		return x.NTilde
	}
	return nil
}

func (x *KeyGenPhase1Msg) GetH1() []byte {
	if x != nil {
		return x.H1
	}
	return nil
}

func (x *KeyGenPhase1Msg) GetH2() []byte {
	if x != nil {
		return x.H2
	}
	return nil
}

func (x *KeyGenPhase1Msg) GetProof() *PQProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *KeyGenPhase1Msg) GetShamirSharePubKey() []byte {
	if x != nil {
		return x.ShamirSharePubKey
	}
	return nil
}

type KeyGenPhase2Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom   string   `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`
	LabelTo     string   `protobuf:"bytes,2,opt,name=label_to,json=labelTo,proto3" json:"label_to,omitempty"`
	Share       *ShareXY `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	PubKey      []byte   `protobuf:"bytes,4,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	BlindFactor []byte   `protobuf:"bytes,5,opt,name=blind_factor,json=blindFactor,proto3" json:"blind_factor,omitempty"`
}

func (x *KeyGenPhase2Msg) Reset() {
	*x = KeyGenPhase2Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyGenPhase2Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyGenPhase2Msg) ProtoMessage() {}

func (x *KeyGenPhase2Msg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyGenPhase2Msg.ProtoReflect.Descriptor instead.
func (*KeyGenPhase2Msg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{1}
}

func (x *KeyGenPhase2Msg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeyGenPhase2Msg) GetLabelTo() string {
	if x != nil {
		return x.LabelTo
	}
	return ""
}

func (x *KeyGenPhase2Msg) GetShare() *ShareXY {
	if x != nil {
		return x.Share
	}
	return nil
}

func (x *KeyGenPhase2Msg) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *KeyGenPhase2Msg) GetBlindFactor() []byte {
	if x != nil {
		return x.BlindFactor
	}
	return nil
}

type KeyGenPhase3Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom string        `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`
	ShamirPub []byte        `protobuf:"bytes,2,opt,name=shamir_pub,json=shamirPub,proto3" json:"shamir_pub,omitempty"`
	Proof     *SchnorrProof `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *KeyGenPhase3Msg) Reset() {
	*x = KeyGenPhase3Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyGenPhase3Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyGenPhase3Msg) ProtoMessage() {}

func (x *KeyGenPhase3Msg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyGenPhase3Msg.ProtoReflect.Descriptor instead.
func (*KeyGenPhase3Msg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{2}
}

func (x *KeyGenPhase3Msg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeyGenPhase3Msg) GetShamirPub() []byte {
	if x != nil {
		return x.ShamirPub
	}
	return nil
}

func (x *KeyGenPhase3Msg) GetProof() *SchnorrProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type KeySignPhase1Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom           string               `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`
	LabelTo             string               `protobuf:"bytes,2,opt,name=label_to,json=labelTo,proto3" json:"label_to,omitempty"`
	MessageK            []byte               `protobuf:"bytes,3,opt,name=message_k,json=messageK,proto3" json:"message_k,omitempty"`
	MessageR            []byte               `protobuf:"bytes,4,opt,name=message_r,json=messageR,proto3" json:"message_r,omitempty"`
	SigOthersRCommit    []byte               `protobuf:"bytes,5,opt,name=sig_others_r_commit,json=sigOthersRCommit,proto3" json:"sig_others_r_commit,omitempty"`
	PaillierPubKey      *PaillierPubKey      `protobuf:"bytes,6,opt,name=paillier_pubKey,json=paillierPubKey,proto3" json:"paillier_pubKey,omitempty"`
	PaillierRangeProofK *InitiatorRangeProof `protobuf:"bytes,7,opt,name=paillier_range_proof_k,json=paillierRangeProofK,proto3" json:"paillier_range_proof_k,omitempty"`
	PaillierRangeProofR *InitiatorRangeProof `protobuf:"bytes,8,opt,name=paillier_range_proof_r,json=paillierRangeProofR,proto3" json:"paillier_range_proof_r,omitempty"`
}

func (x *KeySignPhase1Msg) Reset() {
	*x = KeySignPhase1Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeySignPhase1Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySignPhase1Msg) ProtoMessage() {}

func (x *KeySignPhase1Msg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySignPhase1Msg.ProtoReflect.Descriptor instead.
func (*KeySignPhase1Msg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{3}
}

func (x *KeySignPhase1Msg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeySignPhase1Msg) GetLabelTo() string {
	if x != nil {
		return x.LabelTo
	}
	return ""
}

func (x *KeySignPhase1Msg) GetMessageK() []byte {
	if x != nil {
		return x.MessageK
	}
	return nil
}

func (x *KeySignPhase1Msg) GetMessageR() []byte {
	if x != nil {
		return x.MessageR
	}
	return nil
}

func (x *KeySignPhase1Msg) GetSigOthersRCommit() []byte {
	if x != nil {
		return x.SigOthersRCommit
	}
	return nil
}

func (x *KeySignPhase1Msg) GetPaillierPubKey() *PaillierPubKey {
	if x != nil {
		return x.PaillierPubKey
	}
	return nil
}

func (x *KeySignPhase1Msg) GetPaillierRangeProofK() *InitiatorRangeProof {
	if x != nil {
		return x.PaillierRangeProofK
	}
	return nil
}

func (x *KeySignPhase1Msg) GetPaillierRangeProofR() *InitiatorRangeProof {
	if x != nil {
		return x.PaillierRangeProofR
	}
	return nil
}

type KeySignPhase2Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom           string               `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`
	LabelTo             string               `protobuf:"bytes,2,opt,name=label_to,json=labelTo,proto3" json:"label_to,omitempty"`
	MessageKResponse    []byte               `protobuf:"bytes,3,opt,name=message_k_response,json=messageKResponse,proto3" json:"message_k_response,omitempty"`
	MessageRResponse    []byte               `protobuf:"bytes,4,opt,name=message_r_response,json=messageRResponse,proto3" json:"message_r_response,omitempty"`
	PaillierRangeProofK *ResponderRangeProof `protobuf:"bytes,5,opt,name=paillier_range_proof_k,json=paillierRangeProofK,proto3" json:"paillier_range_proof_k,omitempty"`
	PaillierRangeProofR *ResponderRangeProof `protobuf:"bytes,6,opt,name=paillier_range_proof_r,json=paillierRangeProofR,proto3" json:"paillier_range_proof_r,omitempty"`
}

func (x *KeySignPhase2Msg) Reset() {
	*x = KeySignPhase2Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeySignPhase2Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySignPhase2Msg) ProtoMessage() {}

func (x *KeySignPhase2Msg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySignPhase2Msg.ProtoReflect.Descriptor instead.
func (*KeySignPhase2Msg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{4}
}

func (x *KeySignPhase2Msg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeySignPhase2Msg) GetLabelTo() string {
	if x != nil {
		return x.LabelTo
	}
	return ""
}

func (x *KeySignPhase2Msg) GetMessageKResponse() []byte {
	if x != nil {
		return x.MessageKResponse
	}
	return nil
}

func (x *KeySignPhase2Msg) GetMessageRResponse() []byte {
	if x != nil {
		return x.MessageRResponse
	}
	return nil
}

func (x *KeySignPhase2Msg) GetPaillierRangeProofK() *ResponderRangeProof {
	if x != nil {
		return x.PaillierRangeProofK
	}
	return nil
}

func (x *KeySignPhase2Msg) GetPaillierRangeProofR() *ResponderRangeProof {
	if x != nil {
		return x.PaillierRangeProofR
	}
	return nil
}

type KeySignPhase3And4Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom   string        `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`
	Thea        []byte        `protobuf:"bytes,2,opt,name=thea,proto3" json:"thea,omitempty"`
	KiProof     *SchnorrProof `protobuf:"bytes,3,opt,name=ki_proof,json=kiProof,proto3" json:"ki_proof,omitempty"`
	SigOthersR  *SigR         `protobuf:"bytes,4,opt,name=sig_others_r,json=sigOthersR,proto3" json:"sig_others_r,omitempty"`
	BlindFactor []byte        `protobuf:"bytes,5,opt,name=blind_factor,json=blindFactor,proto3" json:"blind_factor,omitempty"`
}

func (x *KeySignPhase3And4Msg) Reset() {
	*x = KeySignPhase3And4Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeySignPhase3And4Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySignPhase3And4Msg) ProtoMessage() {}

func (x *KeySignPhase3And4Msg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySignPhase3And4Msg.ProtoReflect.Descriptor instead.
func (*KeySignPhase3And4Msg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{5}
}

func (x *KeySignPhase3And4Msg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeySignPhase3And4Msg) GetThea() []byte {
	if x != nil {
		return x.Thea
	}
	return nil
}

func (x *KeySignPhase3And4Msg) GetKiProof() *SchnorrProof {
	if x != nil {
		return x.KiProof
	}
	return nil
}

func (x *KeySignPhase3And4Msg) GetSigOthersR() *SigR {
	if x != nil {
		return x.SigOthersR
	}
	return nil
}

func (x *KeySignPhase3And4Msg) GetBlindFactor() []byte {
	if x != nil {
		return x.BlindFactor
	}
	return nil
}

type KeySignPhase5AMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom string `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`
	VCommit   []byte `protobuf:"bytes,2,opt,name=v_commit,json=vCommit,proto3" json:"v_commit,omitempty"`
	ACommit   []byte `protobuf:"bytes,3,opt,name=a_commit,json=aCommit,proto3" json:"a_commit,omitempty"`
	BCommit   []byte `protobuf:"bytes,4,opt,name=b_commit,json=bCommit,proto3" json:"b_commit,omitempty"`
}

func (x *KeySignPhase5AMsg) Reset() {
	*x = KeySignPhase5AMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeySignPhase5AMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySignPhase5AMsg) ProtoMessage() {}

func (x *KeySignPhase5AMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySignPhase5AMsg.ProtoReflect.Descriptor instead.
func (*KeySignPhase5AMsg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{6}
}

func (x *KeySignPhase5AMsg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeySignPhase5AMsg) GetVCommit() []byte {
	if x != nil {
		return x.VCommit
	}
	return nil
}

func (x *KeySignPhase5AMsg) GetACommit() []byte {
	if x != nil {
		return x.ACommit
	}
	return nil
}

func (x *KeySignPhase5AMsg) GetBCommit() []byte {
	if x != nil {
		return x.BCommit
	}
	return nil
}

type KeySignPhase5BMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom    string   `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`
	Proof        *SiProof `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
	VBlindFactor []byte   `protobuf:"bytes,3,opt,name=v_blind_factor,json=vBlindFactor,proto3" json:"v_blind_factor,omitempty"`
	ABlindFactor []byte   `protobuf:"bytes,4,opt,name=a_blind_factor,json=aBlindFactor,proto3" json:"a_blind_factor,omitempty"`
	BBlindFactor []byte   `protobuf:"bytes,5,opt,name=b_blind_factor,json=bBlindFactor,proto3" json:"b_blind_factor,omitempty"`
}

func (x *KeySignPhase5BMsg) Reset() {
	*x = KeySignPhase5BMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeySignPhase5BMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySignPhase5BMsg) ProtoMessage() {}

func (x *KeySignPhase5BMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySignPhase5BMsg.ProtoReflect.Descriptor instead.
func (*KeySignPhase5BMsg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{7}
}

func (x *KeySignPhase5BMsg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeySignPhase5BMsg) GetProof() *SiProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *KeySignPhase5BMsg) GetVBlindFactor() []byte {
	if x != nil {
		return x.VBlindFactor
	}
	return nil
}

func (x *KeySignPhase5BMsg) GetABlindFactor() []byte {
	if x != nil {
		return x.ABlindFactor
	}
	return nil
}

func (x *KeySignPhase5BMsg) GetBBlindFactor() []byte {
	if x != nil {
		return x.BBlindFactor
	}
	return nil
}

type KeySignPhase5CMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom string `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`
	UCommit   []byte `protobuf:"bytes,2,opt,name=u_commit,json=uCommit,proto3" json:"u_commit,omitempty"`
	TCommit   []byte `protobuf:"bytes,3,opt,name=t_commit,json=tCommit,proto3" json:"t_commit,omitempty"`
}

func (x *KeySignPhase5CMsg) Reset() {
	*x = KeySignPhase5CMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeySignPhase5CMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySignPhase5CMsg) ProtoMessage() {}

func (x *KeySignPhase5CMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySignPhase5CMsg.ProtoReflect.Descriptor instead.
func (*KeySignPhase5CMsg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{8}
}

func (x *KeySignPhase5CMsg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeySignPhase5CMsg) GetUCommit() []byte {
	if x != nil {
		return x.UCommit
	}
	return nil
}

func (x *KeySignPhase5CMsg) GetTCommit() []byte {
	if x != nil {
		return x.TCommit
	}
	return nil
}

type KeySignPhase5DMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom    string   `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`
	Check        *SiCheck `protobuf:"bytes,2,opt,name=check,proto3" json:"check,omitempty"`
	UBlindFactor []byte   `protobuf:"bytes,3,opt,name=u_blind_factor,json=uBlindFactor,proto3" json:"u_blind_factor,omitempty"`
	TBlindFactor []byte   `protobuf:"bytes,4,opt,name=t_blind_factor,json=tBlindFactor,proto3" json:"t_blind_factor,omitempty"`
}

func (x *KeySignPhase5DMsg) Reset() {
	*x = KeySignPhase5DMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeySignPhase5DMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySignPhase5DMsg) ProtoMessage() {}

func (x *KeySignPhase5DMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySignPhase5DMsg.ProtoReflect.Descriptor instead.
func (*KeySignPhase5DMsg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{9}
}

func (x *KeySignPhase5DMsg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeySignPhase5DMsg) GetCheck() *SiCheck {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *KeySignPhase5DMsg) GetUBlindFactor() []byte {
	if x != nil {
		return x.UBlindFactor
	}
	return nil
}

func (x *KeySignPhase5DMsg) GetTBlindFactor() []byte {
	if x != nil {
		return x.TBlindFactor
	}
	return nil
}

type KeySignPhase5EMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelFrom string `protobuf:"bytes,1,opt,name=label_from,json=labelFrom,proto3" json:"label_from,omitempty"`
	Sigr      []byte `protobuf:"bytes,2,opt,name=sigr,proto3" json:"sigr,omitempty"`
	Sigs      []byte `protobuf:"bytes,3,opt,name=sigs,proto3" json:"sigs,omitempty"`
	V         []byte `protobuf:"bytes,4,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *KeySignPhase5EMsg) Reset() {
	*x = KeySignPhase5EMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeySignPhase5EMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySignPhase5EMsg) ProtoMessage() {}

func (x *KeySignPhase5EMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySignPhase5EMsg.ProtoReflect.Descriptor instead.
func (*KeySignPhase5EMsg) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{10}
}

func (x *KeySignPhase5EMsg) GetLabelFrom() string {
	if x != nil {
		return x.LabelFrom
	}
	return ""
}

func (x *KeySignPhase5EMsg) GetSigr() []byte {
	if x != nil {
		return x.Sigr
	}
	return nil
}

func (x *KeySignPhase5EMsg) GetSigs() []byte {
	if x != nil {
		return x.Sigs
	}
	return nil
}

func (x *KeySignPhase5EMsg) GetV() []byte {
	if x != nil {
		return x.V
	}
	return nil
}

type SigR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X []byte `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y []byte `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *SigR) Reset() {
	*x = SigR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigR) ProtoMessage() {}

func (x *SigR) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigR.ProtoReflect.Descriptor instead.
func (*SigR) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{11}
}

func (x *SigR) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *SigR) GetY() []byte {
	if x != nil {
		return x.Y
	}
	return nil
}

type ShareXY struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X []byte `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y []byte `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *ShareXY) Reset() {
	*x = ShareXY{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareXY) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareXY) ProtoMessage() {}

func (x *ShareXY) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareXY.ProtoReflect.Descriptor instead.
func (*ShareXY) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{12}
}

func (x *ShareXY) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *ShareXY) GetY() []byte {
	if x != nil {
		return x.Y
	}
	return nil
}

type PaillierPubKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Len int64  `protobuf:"varint,1,opt,name=len,proto3" json:"len,omitempty"`
	N   []byte `protobuf:"bytes,2,opt,name=n,proto3" json:"n,omitempty"`     //n = p*q (where p & q are two primes)
	G   []byte `protobuf:"bytes,3,opt,name=g,proto3" json:"g,omitempty"`     //g random integer in Z\*\n^2
	Nsq []byte `protobuf:"bytes,4,opt,name=nsq,proto3" json:"nsq,omitempty"` //N^2
}

func (x *PaillierPubKey) Reset() {
	*x = PaillierPubKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaillierPubKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaillierPubKey) ProtoMessage() {}

func (x *PaillierPubKey) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaillierPubKey.ProtoReflect.Descriptor instead.
func (*PaillierPubKey) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{13}
}

func (x *PaillierPubKey) GetLen() int64 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *PaillierPubKey) GetN() []byte {
	if x != nil {
		return x.N
	}
	return nil
}

func (x *PaillierPubKey) GetG() []byte {
	if x != nil {
		return x.G
	}
	return nil
}

func (x *PaillierPubKey) GetNsq() []byte {
	if x != nil {
		return x.Nsq
	}
	return nil
}

type InitiatorRangeProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Z  []byte `protobuf:"bytes,1,opt,name=z,proto3" json:"z,omitempty"`
	W  []byte `protobuf:"bytes,2,opt,name=w,proto3" json:"w,omitempty"`
	Mu []byte `protobuf:"bytes,3,opt,name=mu,proto3" json:"mu,omitempty"`
	S  []byte `protobuf:"bytes,4,opt,name=s,proto3" json:"s,omitempty"`
	S1 []byte `protobuf:"bytes,5,opt,name=s1,proto3" json:"s1,omitempty"`
	S2 []byte `protobuf:"bytes,6,opt,name=s2,proto3" json:"s2,omitempty"`
}

func (x *InitiatorRangeProof) Reset() {
	*x = InitiatorRangeProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiatorRangeProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiatorRangeProof) ProtoMessage() {}

func (x *InitiatorRangeProof) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiatorRangeProof.ProtoReflect.Descriptor instead.
func (*InitiatorRangeProof) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{14}
}

func (x *InitiatorRangeProof) GetZ() []byte {
	if x != nil {
		return x.Z
	}
	return nil
}

func (x *InitiatorRangeProof) GetW() []byte {
	if x != nil {
		return x.W
	}
	return nil
}

func (x *InitiatorRangeProof) GetMu() []byte {
	if x != nil {
		return x.Mu
	}
	return nil
}

func (x *InitiatorRangeProof) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *InitiatorRangeProof) GetS1() []byte {
	if x != nil {
		return x.S1
	}
	return nil
}

func (x *InitiatorRangeProof) GetS2() []byte {
	if x != nil {
		return x.S2
	}
	return nil
}

type ResponderRangeProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MuX []byte `protobuf:"bytes,1,opt,name=mu_x,json=muX,proto3" json:"mu_x,omitempty"`
	MuY []byte `protobuf:"bytes,2,opt,name=mu_y,json=muY,proto3" json:"mu_y,omitempty"`
	Z   []byte `protobuf:"bytes,3,opt,name=z,proto3" json:"z,omitempty"`
	ZD  []byte `protobuf:"bytes,4,opt,name=z_d,json=zD,proto3" json:"z_d,omitempty"`
	T   []byte `protobuf:"bytes,5,opt,name=t,proto3" json:"t,omitempty"`
	V   []byte `protobuf:"bytes,6,opt,name=v,proto3" json:"v,omitempty"`
	W   []byte `protobuf:"bytes,7,opt,name=w,proto3" json:"w,omitempty"`
	S   []byte `protobuf:"bytes,8,opt,name=s,proto3" json:"s,omitempty"`
	S1  []byte `protobuf:"bytes,9,opt,name=s1,proto3" json:"s1,omitempty"`
	S2  []byte `protobuf:"bytes,10,opt,name=s2,proto3" json:"s2,omitempty"`
	T1  []byte `protobuf:"bytes,11,opt,name=t1,proto3" json:"t1,omitempty"`
	T2  []byte `protobuf:"bytes,12,opt,name=t2,proto3" json:"t2,omitempty"`
	XX  []byte `protobuf:"bytes,13,opt,name=x_x,json=xX,proto3" json:"x_x,omitempty"`
	XY  []byte `protobuf:"bytes,14,opt,name=x_y,json=xY,proto3" json:"x_y,omitempty"`
}

func (x *ResponderRangeProof) Reset() {
	*x = ResponderRangeProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponderRangeProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponderRangeProof) ProtoMessage() {}

func (x *ResponderRangeProof) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponderRangeProof.ProtoReflect.Descriptor instead.
func (*ResponderRangeProof) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{15}
}

func (x *ResponderRangeProof) GetMuX() []byte {
	if x != nil {
		return x.MuX
	}
	return nil
}

func (x *ResponderRangeProof) GetMuY() []byte {
	if x != nil {
		return x.MuY
	}
	return nil
}

func (x *ResponderRangeProof) GetZ() []byte {
	if x != nil {
		return x.Z
	}
	return nil
}

func (x *ResponderRangeProof) GetZD() []byte {
	if x != nil {
		return x.ZD
	}
	return nil
}

func (x *ResponderRangeProof) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *ResponderRangeProof) GetV() []byte {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *ResponderRangeProof) GetW() []byte {
	if x != nil {
		return x.W
	}
	return nil
}

func (x *ResponderRangeProof) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *ResponderRangeProof) GetS1() []byte {
	if x != nil {
		return x.S1
	}
	return nil
}

func (x *ResponderRangeProof) GetS2() []byte {
	if x != nil {
		return x.S2
	}
	return nil
}

func (x *ResponderRangeProof) GetT1() []byte {
	if x != nil {
		return x.T1
	}
	return nil
}

func (x *ResponderRangeProof) GetT2() []byte {
	if x != nil {
		return x.T2
	}
	return nil
}

func (x *ResponderRangeProof) GetXX() []byte {
	if x != nil {
		return x.XX
	}
	return nil
}

func (x *ResponderRangeProof) GetXY() []byte {
	if x != nil {
		return x.XY
	}
	return nil
}

type SchnorrProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey []byte `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Num    []byte `protobuf:"bytes,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *SchnorrProof) Reset() {
	*x = SchnorrProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchnorrProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchnorrProof) ProtoMessage() {}

func (x *SchnorrProof) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchnorrProof.ProtoReflect.Descriptor instead.
func (*SchnorrProof) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{16}
}

func (x *SchnorrProof) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *SchnorrProof) GetNum() []byte {
	if x != nil {
		return x.Num
	}
	return nil
}

type SiProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VX     []byte `protobuf:"bytes,1,opt,name=v_x,json=vX,proto3" json:"v_x,omitempty"`
	VY     []byte `protobuf:"bytes,2,opt,name=v_y,json=vY,proto3" json:"v_y,omitempty"`
	AX     []byte `protobuf:"bytes,3,opt,name=a_x,json=aX,proto3" json:"a_x,omitempty"`
	AY     []byte `protobuf:"bytes,4,opt,name=a_y,json=aY,proto3" json:"a_y,omitempty"`
	BX     []byte `protobuf:"bytes,5,opt,name=b_x,json=bX,proto3" json:"b_x,omitempty"`
	BY     []byte `protobuf:"bytes,6,opt,name=b_y,json=bY,proto3" json:"b_y,omitempty"`
	AlphaX []byte `protobuf:"bytes,7,opt,name=alpha_x,json=alphaX,proto3" json:"alpha_x,omitempty"`
	AlphaY []byte `protobuf:"bytes,8,opt,name=alpha_y,json=alphaY,proto3" json:"alpha_y,omitempty"`
	BetaX  []byte `protobuf:"bytes,9,opt,name=beta_x,json=betaX,proto3" json:"beta_x,omitempty"`
	BetaY  []byte `protobuf:"bytes,10,opt,name=beta_y,json=betaY,proto3" json:"beta_y,omitempty"`
	T      []byte `protobuf:"bytes,11,opt,name=t,proto3" json:"t,omitempty"`
	U      []byte `protobuf:"bytes,12,opt,name=u,proto3" json:"u,omitempty"`
}

func (x *SiProof) Reset() {
	*x = SiProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiProof) ProtoMessage() {}

func (x *SiProof) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiProof.ProtoReflect.Descriptor instead.
func (*SiProof) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{17}
}

func (x *SiProof) GetVX() []byte {
	if x != nil {
		return x.VX
	}
	return nil
}

func (x *SiProof) GetVY() []byte {
	if x != nil {
		return x.VY
	}
	return nil
}

func (x *SiProof) GetAX() []byte {
	if x != nil {
		return x.AX
	}
	return nil
}

func (x *SiProof) GetAY() []byte {
	if x != nil {
		return x.AY
	}
	return nil
}

func (x *SiProof) GetBX() []byte {
	if x != nil {
		return x.BX
	}
	return nil
}

func (x *SiProof) GetBY() []byte {
	if x != nil {
		return x.BY
	}
	return nil
}

func (x *SiProof) GetAlphaX() []byte {
	if x != nil {
		return x.AlphaX
	}
	return nil
}

func (x *SiProof) GetAlphaY() []byte {
	if x != nil {
		return x.AlphaY
	}
	return nil
}

func (x *SiProof) GetBetaX() []byte {
	if x != nil {
		return x.BetaX
	}
	return nil
}

func (x *SiProof) GetBetaY() []byte {
	if x != nil {
		return x.BetaY
	}
	return nil
}

func (x *SiProof) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *SiProof) GetU() []byte {
	if x != nil {
		return x.U
	}
	return nil
}

type SiCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	U []byte `protobuf:"bytes,1,opt,name=u,proto3" json:"u,omitempty"`
	T []byte `protobuf:"bytes,2,opt,name=t,proto3" json:"t,omitempty"`
}

func (x *SiCheck) Reset() {
	*x = SiCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiCheck) ProtoMessage() {}

func (x *SiCheck) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiCheck.ProtoReflect.Descriptor instead.
func (*SiCheck) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{18}
}

func (x *SiCheck) GetU() []byte {
	if x != nil {
		return x.U
	}
	return nil
}

func (x *SiCheck) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

type PQProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zi [][]byte `protobuf:"bytes,1,rep,name=zi,proto3" json:"zi,omitempty"`
	Xi [][]byte `protobuf:"bytes,2,rep,name=xi,proto3" json:"xi,omitempty"`
	Y  []byte   `protobuf:"bytes,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *PQProof) Reset() {
	*x = PQProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PQProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PQProof) ProtoMessage() {}

func (x *PQProof) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PQProof.ProtoReflect.Descriptor instead.
func (*PQProof) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{19}
}

func (x *PQProof) GetZi() [][]byte {
	if x != nil {
		return x.Zi
	}
	return nil
}

func (x *PQProof) GetXi() [][]byte {
	if x != nil {
		return x.Xi
	}
	return nil
}

func (x *PQProof) GetY() []byte {
	if x != nil {
		return x.Y
	}
	return nil
}

type KeyGenData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label         string          `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	SignThreshold uint64          `protobuf:"varint,2,opt,name=sign_threshold,json=signThreshold,proto3" json:"sign_threshold,omitempty"`
	Paras         []*ParameterMap `protobuf:"bytes,3,rep,name=paras,proto3" json:"paras,omitempty"`
	PubKeySum     []byte          `protobuf:"bytes,4,opt,name=pub_key_sum,json=pubKeySum,proto3" json:"pub_key_sum,omitempty"`
	KeyNodes      []string        `protobuf:"bytes,5,rep,name=key_nodes,json=keyNodes,proto3" json:"key_nodes,omitempty"`
}

func (x *KeyGenData) Reset() {
	*x = KeyGenData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyGenData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyGenData) ProtoMessage() {}

func (x *KeyGenData) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyGenData.ProtoReflect.Descriptor instead.
func (*KeyGenData) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{20}
}

func (x *KeyGenData) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *KeyGenData) GetSignThreshold() uint64 {
	if x != nil {
		return x.SignThreshold
	}
	return 0
}

func (x *KeyGenData) GetParas() []*ParameterMap {
	if x != nil {
		return x.Paras
	}
	return nil
}

func (x *KeyGenData) GetPubKeySum() []byte {
	if x != nil {
		return x.PubKeySum
	}
	return nil
}

func (x *KeyGenData) GetKeyNodes() []string {
	if x != nil {
		return x.KeyNodes
	}
	return nil
}

type ParameterMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label  string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Share  *ShareXY `protobuf:"bytes,2,opt,name=share,proto3" json:"share,omitempty"`
	NTilde []byte   `protobuf:"bytes,3,opt,name=n_tilde,json=nTilde,proto3" json:"n_tilde,omitempty"`
	H1     []byte   `protobuf:"bytes,4,opt,name=h1,proto3" json:"h1,omitempty"`
	H2     []byte   `protobuf:"bytes,5,opt,name=h2,proto3" json:"h2,omitempty"`
}

func (x *ParameterMap) Reset() {
	*x = ParameterMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ectypes_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParameterMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParameterMap) ProtoMessage() {}

func (x *ParameterMap) ProtoReflect() protoreflect.Message {
	mi := &file_ectypes_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParameterMap.ProtoReflect.Descriptor instead.
func (*ParameterMap) Descriptor() ([]byte, []int) {
	return file_ectypes_proto_rawDescGZIP(), []int{21}
}

func (x *ParameterMap) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ParameterMap) GetShare() *ShareXY {
	if x != nil {
		return x.Share
	}
	return nil
}

func (x *ParameterMap) GetNTilde() []byte {
	if x != nil {
		return x.NTilde
	}
	return nil
}

func (x *ParameterMap) GetH1() []byte {
	if x != nil {
		return x.H1
	}
	return nil
}

func (x *ParameterMap) GetH2() []byte {
	if x != nil {
		return x.H2
	}
	return nil
}

var File_ectypes_proto protoreflect.FileDescriptor

var file_ectypes_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x0f, 0x4b, 0x65, 0x79,
	0x47, 0x65, 0x6e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x31, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x70,
	0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6f, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x4e, 0x54, 0x69, 0x6c, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x4e, 0x54, 0x69, 0x6c, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x31, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x68, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x32, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x68, 0x32, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x50, 0x51, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x12, 0x2f, 0x0a, 0x14, 0x73, 0x68, 0x61, 0x6d, 0x69, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11,
	0x73, 0x68, 0x61, 0x6d, 0x69, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x32, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x6f, 0x12,
	0x26, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x58, 0x59,
	0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0x7c, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x33, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x6d, 0x69, 0x72, 0x5f,
	0x70, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x68, 0x61, 0x6d, 0x69,
	0x72, 0x50, 0x75, 0x62, 0x12, 0x2b, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x63,
	0x68, 0x6e, 0x6f, 0x72, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x22, 0x9d, 0x03, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x31, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x6f,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x69,
	0x67, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x69, 0x67, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x73, 0x52, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x70, 0x61, 0x69,
	0x6c, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x69,
	0x6c, 0x6c, 0x69, 0x65, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x70, 0x61, 0x69,
	0x6c, 0x6c, 0x69, 0x65, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x51, 0x0a, 0x16, 0x70,
	0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x5f, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x63,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x13, 0x70, 0x61, 0x69, 0x6c, 0x6c,
	0x69, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4b, 0x12, 0x51,
	0x0a, 0x16, 0x70, 0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x13, 0x70, 0x61,
	0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x52, 0x22, 0xce, 0x02, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x32, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x6f,
	0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x16,
	0x70, 0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65,
	0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x13, 0x70, 0x61, 0x69, 0x6c,
	0x6c, 0x69, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4b, 0x12,
	0x51, 0x0a, 0x16, 0x70, 0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x13, 0x70,
	0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x52, 0x22, 0xcf, 0x01, 0x0a, 0x14, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x33, 0x41, 0x6e, 0x64, 0x34, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x68,
	0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x68, 0x65, 0x61, 0x12, 0x30,
	0x0a, 0x08, 0x6b, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f,
	0x72, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x07, 0x6b, 0x69, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x12, 0x2f, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x5f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x69, 0x67, 0x52, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x73,
	0x52, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x50, 0x68, 0x61, 0x73, 0x65, 0x35, 0x41, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x76, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x11, 0x4b,
	0x65, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x35, 0x42, 0x4d, 0x73, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x26, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x5f, 0x62, 0x6c, 0x69,
	0x6e, 0x64, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x76, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a,
	0x0e, 0x61, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x61, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x5f, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x62, 0x42, 0x6c,
	0x69, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x68, 0x0a, 0x11, 0x4b, 0x65, 0x79,
	0x53, 0x69, 0x67, 0x6e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x35, 0x43, 0x4d, 0x73, 0x67, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x75, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x11, 0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x35, 0x44, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x69, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x24, 0x0a, 0x0e, 0x75, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x5f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x75, 0x42, 0x6c, 0x69, 0x6e, 0x64,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x5f, 0x62, 0x6c, 0x69, 0x6e,
	0x64, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x74, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x68, 0x0a, 0x11,
	0x4b, 0x65, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x35, 0x45, 0x4d, 0x73,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x73, 0x69, 0x67, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x73, 0x69, 0x67, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x01, 0x76, 0x22, 0x22, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x52, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x79, 0x22, 0x25, 0x0a, 0x07, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x58, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01,
	0x79, 0x22, 0x50, 0x0a, 0x0e, 0x50, 0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6c, 0x65, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x01, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x73, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x6e, 0x73, 0x71, 0x22, 0x6f, 0x0a, 0x13, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x7a, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x01, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x6d, 0x75, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x01, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x73, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x73, 0x32, 0x22, 0xf4, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x11, 0x0a, 0x04,
	0x6d, 0x75, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x75, 0x58, 0x12,
	0x11, 0x0a, 0x04, 0x6d, 0x75, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d,
	0x75, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x7a,
	0x12, 0x0f, 0x0a, 0x03, 0x7a, 0x5f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x7a,
	0x44, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x74, 0x12,
	0x0c, 0x0a, 0x01, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x76, 0x12, 0x0c, 0x0a,
	0x01, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x77, 0x12, 0x0c, 0x0a, 0x01, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x31, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x73, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x32, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x73, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x31, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x32, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x32, 0x12, 0x0f, 0x0a, 0x03, 0x78, 0x5f, 0x78,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x78, 0x58, 0x12, 0x0f, 0x0a, 0x03, 0x78, 0x5f,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x78, 0x59, 0x22, 0x39, 0x0a, 0x0c, 0x53,
	0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75,
	0x62, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0xeb, 0x01, 0x0a, 0x07, 0x53, 0x69, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x12, 0x0f, 0x0a, 0x03, 0x76, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x76, 0x58, 0x12, 0x0f, 0x0a, 0x03, 0x76, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x76, 0x59, 0x12, 0x0f, 0x0a, 0x03, 0x61, 0x5f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x02, 0x61, 0x58, 0x12, 0x0f, 0x0a, 0x03, 0x61, 0x5f, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x61, 0x59, 0x12, 0x0f, 0x0a, 0x03, 0x62, 0x5f, 0x78, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x02, 0x62, 0x58, 0x12, 0x0f, 0x0a, 0x03, 0x62, 0x5f, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x62, 0x59, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x5f, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x58, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x59, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x65,
	0x74, 0x61, 0x5f, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x65, 0x74, 0x61,
	0x58, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x65, 0x74, 0x61, 0x5f, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x62, 0x65, 0x74, 0x61, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x01, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x75, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x01, 0x75, 0x22, 0x25, 0x0a, 0x07, 0x53, 0x69, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x0c, 0x0a, 0x01, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x75, 0x12, 0x0c, 0x0a,
	0x01, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x74, 0x22, 0x37, 0x0a, 0x07, 0x50,
	0x51, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x69, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x02, 0x7a, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x78, 0x69, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x02, 0x78, 0x69, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x01, 0x79, 0x22, 0xb3, 0x01, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x12, 0x2b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x73, 0x12, 0x1e, 0x0a,
	0x0b, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x53, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x0c, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x65, 0x63, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x58, 0x59, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x5f, 0x74,
	0x69, 0x6c, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x54, 0x69, 0x6c,
	0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x68, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x68, 0x32, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ectypes_proto_rawDescOnce sync.Once
	file_ectypes_proto_rawDescData = file_ectypes_proto_rawDesc
)

func file_ectypes_proto_rawDescGZIP() []byte {
	file_ectypes_proto_rawDescOnce.Do(func() {
		file_ectypes_proto_rawDescData = protoimpl.X.CompressGZIP(file_ectypes_proto_rawDescData)
	})
	return file_ectypes_proto_rawDescData
}

var file_ectypes_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_ectypes_proto_goTypes = []interface{}{
	(*KeyGenPhase1Msg)(nil),      // 0: ectypes.KeyGenPhase1Msg
	(*KeyGenPhase2Msg)(nil),      // 1: ectypes.KeyGenPhase2Msg
	(*KeyGenPhase3Msg)(nil),      // 2: ectypes.KeyGenPhase3Msg
	(*KeySignPhase1Msg)(nil),     // 3: ectypes.KeySignPhase1Msg
	(*KeySignPhase2Msg)(nil),     // 4: ectypes.KeySignPhase2Msg
	(*KeySignPhase3And4Msg)(nil), // 5: ectypes.KeySignPhase3And4Msg
	(*KeySignPhase5AMsg)(nil),    // 6: ectypes.KeySignPhase5AMsg
	(*KeySignPhase5BMsg)(nil),    // 7: ectypes.KeySignPhase5BMsg
	(*KeySignPhase5CMsg)(nil),    // 8: ectypes.KeySignPhase5CMsg
	(*KeySignPhase5DMsg)(nil),    // 9: ectypes.KeySignPhase5DMsg
	(*KeySignPhase5EMsg)(nil),    // 10: ectypes.KeySignPhase5EMsg
	(*SigR)(nil),                 // 11: ectypes.SigR
	(*ShareXY)(nil),              // 12: ectypes.ShareXY
	(*PaillierPubKey)(nil),       // 13: ectypes.PaillierPubKey
	(*InitiatorRangeProof)(nil),  // 14: ectypes.InitiatorRangeProof
	(*ResponderRangeProof)(nil),  // 15: ectypes.ResponderRangeProof
	(*SchnorrProof)(nil),         // 16: ectypes.SchnorrProof
	(*SiProof)(nil),              // 17: ectypes.SiProof
	(*SiCheck)(nil),              // 18: ectypes.SiCheck
	(*PQProof)(nil),              // 19: ectypes.PQProof
	(*KeyGenData)(nil),           // 20: ectypes.KeyGenData
	(*ParameterMap)(nil),         // 21: ectypes.ParameterMap
}
var file_ectypes_proto_depIdxs = []int32{
	19, // 0: ectypes.KeyGenPhase1Msg.proof:type_name -> ectypes.PQProof
	12, // 1: ectypes.KeyGenPhase2Msg.share:type_name -> ectypes.ShareXY
	16, // 2: ectypes.KeyGenPhase3Msg.proof:type_name -> ectypes.SchnorrProof
	13, // 3: ectypes.KeySignPhase1Msg.paillier_pubKey:type_name -> ectypes.PaillierPubKey
	14, // 4: ectypes.KeySignPhase1Msg.paillier_range_proof_k:type_name -> ectypes.InitiatorRangeProof
	14, // 5: ectypes.KeySignPhase1Msg.paillier_range_proof_r:type_name -> ectypes.InitiatorRangeProof
	15, // 6: ectypes.KeySignPhase2Msg.paillier_range_proof_k:type_name -> ectypes.ResponderRangeProof
	15, // 7: ectypes.KeySignPhase2Msg.paillier_range_proof_r:type_name -> ectypes.ResponderRangeProof
	16, // 8: ectypes.KeySignPhase3And4Msg.ki_proof:type_name -> ectypes.SchnorrProof
	11, // 9: ectypes.KeySignPhase3And4Msg.sig_others_r:type_name -> ectypes.SigR
	17, // 10: ectypes.KeySignPhase5BMsg.proof:type_name -> ectypes.SiProof
	18, // 11: ectypes.KeySignPhase5DMsg.check:type_name -> ectypes.SiCheck
	21, // 12: ectypes.KeyGenData.paras:type_name -> ectypes.ParameterMap
	12, // 13: ectypes.ParameterMap.share:type_name -> ectypes.ShareXY
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_ectypes_proto_init() }
func file_ectypes_proto_init() {
	if File_ectypes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ectypes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyGenPhase1Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyGenPhase2Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyGenPhase3Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeySignPhase1Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeySignPhase2Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeySignPhase3And4Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeySignPhase5AMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeySignPhase5BMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeySignPhase5CMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeySignPhase5DMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeySignPhase5EMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareXY); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaillierPubKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiatorRangeProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponderRangeProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchnorrProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PQProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyGenData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ectypes_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParameterMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ectypes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ectypes_proto_goTypes,
		DependencyIndexes: file_ectypes_proto_depIdxs,
		MessageInfos:      file_ectypes_proto_msgTypes,
	}.Build()
	File_ectypes_proto = out.File
	file_ectypes_proto_rawDesc = nil
	file_ectypes_proto_goTypes = nil
	file_ectypes_proto_depIdxs = nil
}
